//                             CODIGO USUARIO
package analyzers;
import rootcode.*;
import java.io.FileReader;
import java_cup.runtime.Symbol;
import java.util.LinkedList;
import java.util.ArrayList;

//                  CÓDIGO PARSER, VARIABLES Y MÉTODOS
parser code
{:
    public String resultado ="";
    public String consola = "";

    //Lista de variables Globaless
    public LinkedList<Variable> lista_variables = new LinkedList<Variable> ();

    //Lista de Objetos
    public LinkedList<Objeto> lista_objetos = new LinkedList<Objeto> ();

    //Lista de Errores
    public ArrayList<Esemanticos> ErroresSintacticos = new ArrayList<Esemanticos> ();

    //Lista de Impresiones
    public LinkedList<String> lista_impresion = new LinkedList<String> ();

    public int getValor(String valor){
        if(valor.indexOf('.') == -1){  
            return Integer.parseInt(valor);
        }else{                          
            return (int) Double.parseDouble(valor);
        }
    }

    public String getTipo(String valor){
        if(valor.equals("false")){
            return "Booleano";
        }else if(valor.equals("true")){
            return "Booleano";
        }else if(valor.indexOf('"') >= 0){  //contiene comillas dobles 
            return "Cadena";
        }else if(valor.indexOf('.') >= 0){  //contiene un punto decimal
            return "Decimal";
        }else{
            return "Entero";
        }
    }

    public void definirFuncion(String id, String definicion){
        String[] parts = definicion.split("-");
        parts[0] = parts[0].toLowerCase();
        switch(parts[0]) {
            case "crearparrafo":
                Objeto ob1 = new Objeto("parrafo", id, parts[1]);
                lista_objetos.add(ob1);
                break;
            case "creartextoa":
                Objeto ob2 = new Objeto("textoa", id, parts[1]);
                lista_objetos.add(ob2);
                break;
            case "creartextob":
                Objeto ob3 = new Objeto("textob", id, parts[1]);
                lista_objetos.add(ob3);
                break;
            case "crearimagen":
                Objeto ob4 = new Objeto("imagen", id, parts[1]);
                lista_objetos.add(ob4);
                break;
            case "creartabla":
                Objeto ob5 = new Objeto("tabla", id, parts[1]);
                lista_objetos.add(ob5);
                break;
            case "crearboton":
                Objeto ob6 = new Objeto("boton", id, parts[1]);
                lista_objetos.add(ob6);
                break;
        }
    }

    public String getValorAtributo(String objeto, String atributo){
        for(int i = 0; i < lista_objetos.size(); i++){
            if(lista_objetos.get(i).nombre.equals(objeto)){
                switch(lista_objetos.get(i).tipo) {
                    case "parrafo":
                        if(atributo.toLowerCase().equals("getcontenido")){
                            String cadena = lista_objetos.get(i).valor;
                            String[] parts = cadena.split(",");
                            return parts[0];
                        }else if(atributo.toLowerCase().equals("getalineacion")){
                            String cadena = lista_objetos.get(i).valor;
                            String[] parts = cadena.split(",");
                            return parts[1];
                        }
                        break;
                    case "textoa":
                        if(atributo.toLowerCase().equals("getcontenido")){
                            return lista_objetos.get(i).valor;
                        }
                        break;
                    case "textob":
                        if(atributo.toLowerCase().equals("getcontenido")){
                             return lista_objetos.get(i).valor;
                        }
                        break;
                    case "imagen":
                        if(atributo.toLowerCase().equals("getpath")){
                            String cadena = lista_objetos.get(i).valor;
                            String[] parts = cadena.split(",");
                            return parts[0];
                        }else if(atributo.toLowerCase().equals("getalto")){
                            String cadena = lista_objetos.get(i).valor;
                            String[] parts = cadena.split(",");
                            return parts[1];
                        }else if(atributo.toLowerCase().equals("getancho")){
                            String cadena = lista_objetos.get(i).valor;
                            String[] parts = cadena.split(",");
                            return parts[2];
                        }
                        break;
                    case "boton":
                        if(atributo.toLowerCase().equals("gettexto")){
                            String cadena = lista_objetos.get(i).valor;
                            String[] parts = cadena.split(",");
                            return parts[1];
                        }
                        break;
                }
            }
        }
        return "";
    }
    
    /* #################################################################################################################
       ############################################        SET VALORES        ##########################################
       #################################################################################################################*/

    public String setContenidoParrafo(String actual, String nuevo){
        if(actual.indexOf('@') >= 0){   //Hay alineacion, se debe separar
            String[] parts = actual.split("@");
            String nuevo_valor = nuevo + "@" + parts[1];
            return nuevo_valor;
        }else{
            return nuevo;
        }
    }

    public String setAlineacionParrafo(String actual, String nuevo){
        if(actual.indexOf('@') >= 0){   //Hay alineacion
            String[] parts = actual.split("@");
            String nuevo_valor = parts[0] + "@" + nuevo;
            return nuevo_valor;
        }else{  //No hay alineación, solo se agrega
            return actual + "@" + nuevo;
        }
    }
    
    public String setPathImagen(String actual, String nuevo){
        if(actual.indexOf(',') >= 0){   //Hay tamaños
            String[] parts = actual.split(",");
            return nuevo + "," + parts[1] + "," + parts[2];
        }else{      //No hay tamaños
            return nuevo;
        }
    }

    public String setAltoImagen(String actual, String nuevo){
        if(actual.indexOf(',') >= 0){   //Hay tamaños
            String[] parts = actual.split(",");
            parts[1] = nuevo;
            return parts[0] + "," + nuevo + "," + parts[2];
        }else{      //No hay tamaños
            return "";
        }
            
    }

    public String setAnchoImagen(String actual, String nuevo){
        if(actual.indexOf(',') >= 0){   //Hay tamaños
            String[] parts = actual.split(",");
            parts[2] = nuevo;
            return parts[0] + "," + parts[1] + "," + nuevo;
        }else{      //No hay tamaños
            return "";
        }
    }
    
    /* #################################################################################################################
       ####################################        CREANDO ELEMENTOS HTML        #######################################
       #################################################################################################################*/

    public String CrearParrafo(String cadena){
        if(cadena.indexOf('@') >= 0){   //Contiene alineacion
            String[] parts = cadena.split("@");
            return "<p align=" + parts[1] + ">" + parts[0].replace("\"", "") + "</p>";
        }else{                          //No contiene una alineacion
            return "<p>" + cadena.replace("\"", "") + "</p>";
        }
    }

    public String CrearTextoA(String cadena){
        return "<h1>" + cadena.replace("\"", "") + "</h1>\n";
    }

    public String CrearTextoB(String cadena){
        return "<h2>" + cadena.replace("\"", "") + "</h2>\n";
    }

    public String CrearImagen(String cadena){
        if(cadena.indexOf(',') >= 0){  //Contiene una coma
            String[] parts = cadena.split(",");
            return "<img src=" + parts[0] + "height=\"" + parts[1] + "\" width=\"" + parts[2] + "\">\n";
        }else{
            return "<img src=" + cadena + ">\n";
        } 
    }

    public String CrearTabla(String cadena){
        if(cadena.indexOf('-') >= 0){
            String[] p = cadena.split("-");
            String tabla = "";
            tabla += "<TABLE border = \"1\">\n";
            for(int i = 0; i < p[0].length(); i++){
                char c = p[0].charAt(i);
                if(c == '['){   //Inicia una fila
                    tabla += "<tr>\n<td>";
                }else if(c == ']'){ //Termina una fila
                    tabla += "</td>\n</tr>\n";
                }else if(c == '"'){    
                    //Ignorar
                }else if(c == ','){ //Nueva columna
                    tabla += "</td>\n<td>";
                }else{
                    tabla += String.valueOf(c);
                }
            }
            tabla += "</TABLE>\n";
            return tabla;
        }else{
            String tabla = "";
            tabla += "<TABLE>\n";
            for(int i = 0; i < cadena.length(); i++){
                char c = cadena.charAt(i);
                if(c == '['){   //Inicia una fila
                    tabla += "<tr>\n<td>";
                }else if(c == ']'){ //Termina una fila
                    tabla += "</td>\n</tr>\n";
                }else if(c == '"'){    
                    //Ignorar
                }else if(c == ','){ //Nueva columna
                    tabla += "</td>\n<td>";
                }else{
                    tabla += String.valueOf(c);
                }
            }
            tabla += "</TABLE>\n";
            return tabla;
        }
    }

    public String CrearBoton(String cadena){
        if(cadena.indexOf('-') >= 0){
            String[] p = cadena.split("-");
            String[] parts = p[0].split(",");
            return "<input type=\"button\" name=" + parts[0] + " value=" + parts[1] + " onclick='alert(" + p[1] + ")'" +">"; 
             
        }else{
            String[] parts = cadena.split(",");
            return "<input type=\"button\" name=" + parts[0] + " value=" + parts[1] + ">"; 
        }
    }

    //Metodo al que se llama automaticamente ante algún error sintáctico
    public void syntax_error(Symbol s)
    {        
        System.err.println("Error Sintáctico en la Línea " + (s.left) +" Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
        Esemanticos e = new Esemanticos(String.valueOf(s.value),"Sintactico", s.left + 1, s.right, "No se esperaba ese valor");
        ErroresSintacticos.add(e);
    }
 

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        System.err.println("Error síntactico irrecuperable en la Línea " + (s.left)+ " Columna "+s.right+". Componente " + s.value + " no reconocido.");
        Esemanticos e = new Esemanticos(String.valueOf(s.value),"Sintactico", s.left + 1, s.right, "No se esperaba ese valor");
        ErroresSintacticos.add(e);
    }
:}

//                  CÓDIGO PARA ACCIONES GRAMATICALES
action code
{::}

//              TERMINALES (tokens retornados por el Scanner). 
terminal String open, paragraph, close, div, ddq, rgb, compi, cabecera, titulo, cuerpo, parrafo, salto, crearparrafo,
                tabla, fila, columnac, columna, imagen, textoa, textob, boton, espacio, fondo, alineacion, path, getcontenido,
                alto, ancho, id, texto, borde, true_, false_, semicolon, dolar, equal, plus, hypen, asterisk, dot, numero,
                menor, mayor, menorque, mayorque, diferente, igualque, and, or, not, ollv, cllv, opar, cpar, hashtag, 
                ocorch, ccorch, comma, identificador, cadena, echo, if_, else_, repetir, setcontenido, 
                setalineacion,  getpath, beginHS, getalineacion, creartextoa, creartextob, crearimagen, insertar, clickboton,
                getancho, setpath, setalto, endHS, setancho, getalto, creartabla,setborde, crearboton, settexto, gettexto 
                ;


//                              NO TERMINALES
non terminal String     S, START, HEADER, BODY, ATRIBUTO_CUERPO, CONTENIDO, CONT, ESPACIO, PARRAFO,
                        ATRIBUTO_PARRA, TEXTOA, TEXTOB, IMAGEN, ATRIBUTOS_IMAGEN, ATRI_IMAGE, PARRA,
                        BOTON, ATRIBUTOS_BOTON, ATRI_BTN, TABLA, ATRIBUTO_TABLA, LISTA_FILAS, FILA,
                        LISTA_COLUMNA, COLUMNA, SCRIPTHS, CUERPO_HSC, SCRIPT, DECLARACION, IMPRESION,
                        LISTA_IMPRESION, VALOR_STRING, IF, IF_OPCION, ELSE, REPETIR, STRUCT, LIST_ROWS,
                        ROW, LIST_COLUMN, SET, GET, VALOR_BOOLEANO, EXP, VALOR, CUERPO_SENTENCIA, G,
                        SENTENCIA
                        ;


//                 --     PRECEDENCIA DE OPERADORES     --
precedence left or, dot;
precedence left and;
precedence left not;
precedence left menor, mayor, menorque, mayorque, diferente, igualque;
precedence left plus, hypen;
precedence left asterisk, div;

//                          --    GRAMATICA    --

start with S;

S                   ::= START:a                                                                 {:  resultado =  a; :}
                    ;

START               ::= open:a compi close:b HEADER:c BODY:d open:e div:f compi close:g         {: 
                                                                                                    RESULT = a + "HTML" + b + "\n" +
                                                                                                            c + "\n" +
                                                                                                            d + "\n" +
                                                                                                            e + f + "HTML" + g; 
                                                                                                :}
                    ;

HEADER              ::= open:a cabecera close:b open:c titulo close:d PARRA:p open:e div:f titulo close:g open:h div:i cabecera close:j  
                                                                                                {:
                                                                                                    RESULT = a + "HEAD" + b + "\n" +
                                                                                                            "  " + c + "TITLE" + d + p + e + f + "TITLE" + g + "\n" +
                                                                                                            h + i + "HEAD" + j;
                                                                                                :}
                    ;

BODY                ::= open:a cuerpo ATRIBUTO_CUERPO:b close:c CONTENIDO:d open:e div:f cuerpo close:g 
                                                                                                {:
                                                                                                    RESULT = a + "BODY" + " " + b + c + "\n" +
                                                                                                            d + "\n" +
                                                                                                            e + f + "BODY" + g;
                                                                                                :}
                    |   open:a cuerpo close:b CONTENIDO:c open:d div:e cuerpo close:f           {:
                                                                                                    RESULT = a + "BODY" + b + "\n" +
                                                                                                            c + "\n" +
                                                                                                            d + e + "BODY" + f;
                                                                                                :}
                    ;

ATRIBUTO_CUERPO     ::= fondo equal:a cadena:b                                                  {: 
                                                                                                    String X = b.replace("\"", "");
                                                                                                    String color;
                                                                                                    switch(X.toLowerCase()) {
                                                                                                        case "rojo":
                                                                                                            color = "red";
                                                                                                            break;
                                                                                                        case "amarillo":
                                                                                                            color = "yellow";
                                                                                                            break;
                                                                                                        case "azul":
                                                                                                            color = "blue";
                                                                                                            break;
                                                                                                        case "verde":
                                                                                                            color = "green";
                                                                                                            break;
                                                                                                        case "gris":
                                                                                                            color = "gray";
                                                                                                            break;
                                                                                                        case "negro":
                                                                                                            color = "black";
                                                                                                            break;
                                                                                                        case "rosado":
                                                                                                            color = "pink";
                                                                                                            break;
                                                                                                        default:
                                                                                                            color = "white";
                                                                                                            break;
                                                                                                    }
                                                                                                    RESULT = "bgcolor" + a + "\"" + color + "\""; 
                                                                                                :}                                                              
                    |   fondo equal:a ddq:b rgb:c ddq:d                                         {: RESULT = "bgcolor" + a + b + c + d; :}
                    ;

CONTENIDO           ::= CONTENIDO:a CONT:b                                                      {: RESULT = a + " " + b; :}
                    |   CONT:a                                                                  {: RESULT = a; :}
                    ;

CONT                ::= ESPACIO:a                                                               {: RESULT = a; :}
                    |   PARRAFO:a                                                               {: RESULT = a; :}
                    |   paragraph:a                                                             {: RESULT = a; :}
                    |   open:a div salto close:c                                                {: RESULT = a + "br" + c + "\n";  :}
                    |   TEXTOA:a                                                                {: RESULT = a; :}
                    |   TEXTOB:a                                                                {: RESULT = a; :}
                    |   IMAGEN:a                                                                {: RESULT = a; :}
                    |   BOTON:a                                                                 {: RESULT = a; :}
                    |   TABLA:a                                                                 {: RESULT = a; :}
                    |   SCRIPTHS:a                                                              {: RESULT = a; :}
                    |   error close
                    ;

ESPACIO             ::= open:a espacio close:b CONTENIDO:c open:d div:e espacio close:f         {:
                                                                                                    RESULT = a + "DIV" + b + "\n" +
                                                                                                            c + "\n" +
                                                                                                            d + e + "DIV" + f + "\n";
                                                                                                :}                     
                    ;

PARRAFO             ::= open:a parrafo ATRIBUTO_PARRA:b close:c PARRA:d open:e div:f parrafo close:g    
                                                                                                {:
                                                                                                    RESULT = a + "p" + " " + b + c + "\n" +
                                                                                                            d + "\n" +
                                                                                                            e + f + "p" + g + "\n";
                                                                                                :}
                    |   open:a parrafo close:b PARRA:c open:d div:e parrafo close:f             {:  
                                                                                                    RESULT = a + "p" + b + "\n" +
                                                                                                            c + "\n" +
                                                                                                            d + e + "p" + f + "\n";
                                                                                                :}
                    ;

PARRA               ::= PARRA:a G:b                                                             {: RESULT = a + " " + b; :}
                    |   G:a                                                                     {: RESULT = a; :}
                    ;

G                   ::= paragraph:a                                                             {: RESULT = a;  :}                                                                   
                    |   open:a div salto close:c                                                {: RESULT = a + "br" + c + "\n"; :}
                    ;
                    
ATRIBUTO_PARRA      ::= alineacion equal:a cadena:b                                             {: 
                                                                                                    String X = b.replace("\"", "");
                                                                                                    String ali;
                                                                                                    switch(X.toLowerCase()) {
                                                                                                        case "izquierda":
                                                                                                            ali = "left";
                                                                                                            break;
                                                                                                        case "derecha":
                                                                                                            ali = "right";
                                                                                                            break;
                                                                                                        case "centrado":
                                                                                                            ali = "center";
                                                                                                            break;
                                                                                                        case "justificado":
                                                                                                            ali = "justify";
                                                                                                            break;
                                                                                                        default:
                                                                                                            ali = "center";
                                                                                                            break;
                                                                                                    }

                                                                                                    RESULT = "align" + a + "\"" + ali + "\""; 
                                                                                                :}
                    ;

TEXTOA              ::= open:a textoa close:b PARRA:c open:d div:e textoa close:f               {: RESULT = a + "h1" + b + c + d + e + "h1" + f; :}
                    ;

TEXTOB              ::= open:a textob close:b PARRA:c open:d div:e textob close:f               {: RESULT = a + "h2" + b + c + d + e + "h2" + f; :}
                    ;

IMAGEN              ::= open:a imagen ATRIBUTOS_IMAGEN:b close:c open div imagen close          {: RESULT = a + "img " + b + c; :}
                    ;

ATRIBUTOS_IMAGEN    ::= ATRIBUTOS_IMAGEN:a ATRI_IMAGE:b                                         {: RESULT = a + " " + b; :}
                    |   ATRI_IMAGE:a                                                            {: RESULT = a; :}
                    ;

ATRI_IMAGE          ::= path equal:a cadena:b                                                   {: RESULT = "src" + a + b; :}
                    |   alto equal:a numero:b                                                   {: RESULT = "height" + a + "\"" + b + "\""; :}
                    |   ancho equal:a numero:b                                                  {: RESULT = "width" + a + "\"" + b + "\""; :}
                    ;

BOTON               ::= open:a boton ATRIBUTOS_BOTON:b close:c open div boton close             {: RESULT = a + "input type=\"button\"" + " " + b + c; :}
                    ;

ATRIBUTOS_BOTON     ::= ATRIBUTOS_BOTON:a ATRI_BTN:b                                            {: RESULT = a + " " + b; :}
                    |   ATRI_BTN:a                                                              {: RESULT = a; :}
                    ;

ATRI_BTN            ::= id equal:a cadena:b                                                     {: RESULT = "name" + a + b; :}
                    |   texto equal:a cadena:b                                                  {: RESULT = "value" + a + b; :}
                    ;

TABLA               ::= open:a tabla ATRIBUTO_TABLA:b close:c LISTA_FILAS:d open:e div:f tabla close:g        
                                                                                                {: 
                                                                                                    RESULT = a + "TABLE" + " " + b + c + "\n" +
                                                                                                            d + "\n" +
                                                                                                            e + f + "TABLE" + g;
                                                                                                :}
                    |   open:a tabla close:b LISTA_FILAS:c open:d div:e tabla close:f           {:  
                                                                                                    RESULT = a + "TABLE" + b + "\n" +
                                                                                                            c + "\n" +
                                                                                                            d + e + "TABLE" + f + "\n";
                                                                                                :}
                    ;

ATRIBUTO_TABLA      ::= borde equal true_                                                       {: RESULT = "border = \"1\""; :}
                    |   borde equal false_                                                      {: RESULT = ""; :}
                    ;

LISTA_FILAS         ::= LISTA_FILAS:a FILA:b                                                    {: RESULT = a + b; :}
                    |   FILA:a                                                                  {: RESULT = a; :}
                    ;

FILA                ::= open:a fila close:b LISTA_COLUMNA:c open:d div:e fila close:f           {:  
                                                                                                    RESULT = "\n" + a + "tr" + b + "\n" +
                                                                                                            c +
                                                                                                            d + e + "tr" + f;
                                                                                                :}
                    ;

LISTA_COLUMNA       ::= LISTA_COLUMNA:a COLUMNA:b                                               {: RESULT = a + b; :}
                    |   COLUMNA:a                                                               {: RESULT = a; :}
                    ;

COLUMNA             ::= open:a columnac close:b CONTENIDO:c open:d div:e columnac close:f       {: 
                                                                                                    RESULT = "\n" + a + "th" + b + c + d + e + "th" + f;
                                                                                                :} 
                    |   open:a columna close:b CONTENIDO:c open:d div:e columna close:f         {:  
                                                                                                    RESULT = "\n" + a + "td" + b + c + d + e + "td" + f;
                                                                                                :}
                    ;

/***********************************************************************************************************************************************************/

SCRIPTHS            ::= beginHS CUERPO_HSC:a endHS                                  {: RESULT = a; :}
                    ;

CUERPO_HSC          ::= CUERPO_HSC:a SCRIPT:b                                       {: RESULT = a + " " + b; :}
                    |   SCRIPT:a                                                    {: RESULT = a; :}
                    ;

SCRIPT              ::= DECLARACION                                                 {: RESULT = ""; :}
                    |   IMPRESION:a                                                 {: 
                                                                                        RESULT = "";
                                                                                        consola += a + "\n"; 
                                                                                    :} 
                    |   IF                                                          {: RESULT = ""; :}
                    |   REPETIR                                                     {: RESULT = ""; :}
                    |   hashtag identificador:a equal STRUCT:b semicolon            {:
                                                                                        RESULT = "";
                                                                                        definirFuncion(a,b);
                                                                                    :}
                    |   hashtag identificador:a dot SET:b semicolon                 {:
                                                                                        RESULT = "";
                                                                                        String[] parts = b.split("@");    
                                                                                        String tipoSet = parts[0].toLowerCase();
                                                                                        String valor = parts[1];        
                                                                                        for(int i = 0; i < lista_objetos.size(); i++){
                                                                                            if(lista_objetos.get(i).nombre.equals(a)){
                                                                                                if(lista_objetos.get(i).tipo.equals("parrafo")){
                                                                                                    if(tipoSet.equals("setcontenido")){
                                                                                                        lista_objetos.get(i).valor = setContenidoParrafo(lista_objetos.get(i).valor, valor);
                                                                                                    }else if(tipoSet.equals("setalineacion")){
                                                                                                        lista_objetos.get(i).valor = setAlineacionParrafo(lista_objetos.get(i).valor, valor);
                                                                                                    }
                                                                                                }else if(lista_objetos.get(i).tipo.equals("textoa")){
                                                                                                    lista_objetos.get(i).valor = valor;            
                                                                                                }else if(lista_objetos.get(i).tipo.equals("textob")){
                                                                                                    lista_objetos.get(i).valor = valor;
                                                                                                }else if(lista_objetos.get(i).tipo.equals("imagen")){
                                                                                                    if(tipoSet.equals("setpath")){
                                                                                                        lista_objetos.get(i).valor = setPathImagen(lista_objetos.get(i).valor, valor);
                                                                                                    }else if(tipoSet.equals("setalto")){
                                                                                                        lista_objetos.get(i).valor = setAltoImagen(lista_objetos.get(i).valor, valor);
                                                                                                    }else if(tipoSet.equals("setancho")){
                                                                                                        lista_objetos.get(i).valor = setAnchoImagen(lista_objetos.get(i).valor, valor);
                                                                                                    }
                                                                                                }else if(lista_objetos.get(i).tipo.equals("tabla")){
                                                                                                    lista_objetos.get(i).valor += "-true";
                                                                                                }else if(lista_objetos.get(i).tipo.equals("boton")){
                                                                                                    lista_objetos.get(i).valor += "-" + valor;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    :}
                    |   hashtag identificador:a dot insertar opar cpar semicolon    {:
                                                                                        int creado = 0;
                                                                                        for(int i = 0; i < lista_objetos.size(); i++){
                                                                                            if(lista_objetos.get(i).nombre.equals(a)){
                                                                                                if(lista_objetos.get(i).tipo.equals("parrafo")){
                                                                                                    RESULT = CrearParrafo(lista_objetos.get(i).valor);
                                                                                                    creado = 1;
                                                                                                }else if(lista_objetos.get(i).tipo.equals("textoa")){
                                                                                                    RESULT = "<h1>" + lista_objetos.get(i).valor.replace("\"", "") + "</h1>\n";
                                                                                                    creado = 1;
                                                                                                }else if(lista_objetos.get(i).tipo.equals("textob")){
                                                                                                    RESULT = "<h2>" + lista_objetos.get(i).valor.replace("\"", "") + "</h2>\n";
                                                                                                    creado = 1;
                                                                                                }else if(lista_objetos.get(i).tipo.equals("imagen")){
                                                                                                    RESULT = CrearImagen(lista_objetos.get(i).valor);
                                                                                                    creado = 1;
                                                                                                }else if(lista_objetos.get(i).tipo.equals("tabla")){
                                                                                                    RESULT = CrearTabla(lista_objetos.get(i).valor);
                                                                                                    creado = 1;
                                                                                                }else if(lista_objetos.get(i).tipo.equals("boton")){
                                                                                                    RESULT = CrearBoton(lista_objetos.get(i).valor);
                                                                                                    creado = 1;
                                                                                                }
                                                                                            }
                                                                                            if(creado == 1){ break; }
                                                                                        }
                                                                                    :}
                    |   error semicolon
                    ;

DECLARACION         ::= dolar identificador:a equal EXP:b semicolon                             {:
                                                                                                    String tipo = getTipo(b);
                                                                                                    int encontrado = 0;
                                                                                                    for(Variable aux: lista_variables){
                                                                                                        if(aux.nombre.equals(a)){
                                                                                                            aux.tipo = tipo;
                                                                                                            aux.valor = b;
                                                                                                            encontrado = 1;
                                                                                                        }
                                                                                                        if(encontrado == 1){ break; }
                                                                                                    } 

                                                                                                    if(encontrado == 0){
                                                                                                        Variable v = new Variable(tipo,a, b, String.valueOf(aleft),String.valueOf(aright));
                                                                                                        lista_variables.add(v);
                                                                                                    }
                                                                                                :}
                    |   dolar identificador:a equal hashtag identificador:b dot GET:c semicolon {:
                                                                                                    String valor = getValorAtributo(b,c);
                                                                                                    String tipo = getTipo(valor);
                                                                                                    int encontrado = 0;
                                                                                                    for(Variable aux: lista_variables){
                                                                                                        if(aux.nombre.equals(a)){
                                                                                                            aux.tipo = tipo;
                                                                                                            aux.valor = valor;
                                                                                                            encontrado = 1;
                                                                                                        }
                                                                                                        if(encontrado == 1){ break; }
                                                                                                    } 
                                                                                                    
                                                                                                    if(encontrado == 0){
                                                                                                        Variable v = new Variable(tipo,a,valor,String.valueOf(aleft),String.valueOf(aright));
                                                                                                        lista_variables.add(v);
                                                                                                    }
                                                                                                :}
                    ;

IMPRESION           ::= echo LISTA_IMPRESION:a semicolon                                        {: RESULT = a;  :}
                    ;

LISTA_IMPRESION     ::= LISTA_IMPRESION:a dot VALOR_STRING:b                                    {: RESULT = a + b.replace("\"", ""); :}
                    |   VALOR_STRING:a                                                          {: RESULT = a.replace("\"", ""); :}
                    ;

VALOR_STRING        ::= cadena:a                                                                {: RESULT = a; :}
                    |   dolar identificador:a                                                   {:  
                                                                                                    for(Variable aux: lista_variables){
                                                                                                        if(aux.nombre.equals(a)){
                                                                                                            RESULT = aux.valor;
                                                                                                            break;
                                                                                                        }
                                                                                                    }
                                                                                                :}
                    |   hashtag identificador:b dot GET:c                                       {:
                                                                                                    String valor = getValorAtributo(b,c);
                                                                                                    RESULT = valor;
                                                                                                :}
                    ;

CUERPO_SENTENCIA    ::= CUERPO_SENTENCIA SENTENCIA
                    |   SENTENCIA
                    ;

SENTENCIA           ::= IMPRESION
                    |   IF
                    |   REPETIR
                    |   hashtag identificador dot insertar opar cpar semicolon
                    ;

IF                  ::= if_ opar EXP cpar ollv CUERPO_SENTENCIA IF_OPCION                       {: RESULT = ""; :}
                    ;

IF_OPCION           ::= ELSE cllv                                                   
                    |   cllv
                    ;

ELSE                ::= cllv else_ ollv CUERPO_SENTENCIA                                        {: RESULT = ""; :}
                    ;

REPETIR             ::= repetir opar EXP cpar ollv CUERPO_SENTENCIA cllv                        {: RESULT = ""; :}
                    ;

STRUCT              ::= crearparrafo:a opar VALOR_STRING:b comma VALOR_STRING:d cpar            {: RESULT = a + "-" + b + "@" + d; :}
                    |   crearparrafo:a opar VALOR_STRING:b cpar                                 {: RESULT = a + "-" + b; :}
                    |   creartextoa:a opar VALOR_STRING:b cpar                                  {: RESULT = a + "-" + b; :}
                    |   creartextob:a opar VALOR_STRING:b cpar                                  {: RESULT = a + "-" + b; :}
                    |   crearimagen:a opar VALOR_STRING:b cpar                                  {: RESULT = a + "-" + b; :}
                    |   crearimagen:a opar VALOR_STRING:b comma:c EXP:d comma:e EXP:f cpar      {: RESULT = a + "-" + b + c + d + e + f; :}
                    |   creartabla:a opar LIST_ROWS:b cpar                                      {: RESULT = a + "-" + b; :}
                    |   crearboton:a opar VALOR_STRING:b comma:c VALOR_STRING:d cpar            {: RESULT = a + "-" + b + c + d; :}
                    ;

LIST_ROWS           ::= LIST_ROWS:a comma:b ROW:c                                               {: RESULT = a + b + c; :}
                    |   ROW:a                                                                   {: RESULT = a; :}
                    ;

ROW                 ::= ocorch:a LIST_COLUMN:b ccorch:c                                         {: RESULT = a + b + c; :}
                    ;

LIST_COLUMN         ::= LIST_COLUMN:a comma:b EXP:c                                             {: RESULT = a + b + c; :}
                    |   EXP:a                                                                   {: RESULT = a; :}
                    ;

SET                 ::= setcontenido:a opar VALOR_STRING:b cpar                                 {: RESULT = a + "@" + b; :}
                    |   setalineacion:a opar VALOR_STRING:b cpar                                {: RESULT = a + "@" + b; :}
                    |   setpath:a opar VALOR_STRING:b cpar                                      {: RESULT = a + "@" + b; :}
                    |   setalto:a opar EXP:b cpar                                               {: RESULT = a + "@" + b; :}
                    |   setancho:a opar EXP:b cpar                                              {: RESULT = a + "@" + b; :}
                    |   setborde:a opar VALOR_BOOLEANO:b cpar                                   {: RESULT = a + "@" + b; :}
                    |   settexto:a opar VALOR_STRING:b cpar                                     {: RESULT = a + "@" + b; :}
                    |   clickboton:a opar VALOR_STRING:b cpar                                   {: RESULT = a + "@" + b; :}
                    ;

GET                 ::= getcontenido:a opar cpar                                                {: RESULT = a; :}                             
                    |   getalineacion:a opar cpar                                               {: RESULT = a; :}
                    |   getpath:a opar cpar                                                     {: RESULT = a; :}
                    |   getalto:a opar cpar                                                     {: RESULT = a; :}   
                    |   getancho:a opar cpar                                                    {: RESULT = a; :}
                    |   gettexto:a opar cpar                                                    {: RESULT = a; :}
                    ;

VALOR_BOOLEANO      ::= true_:a                                                                 {: RESULT = a; :}
                    |   false_:a                                                                {: RESULT = a; :}
                    |   dolar identificador:a                                                   {:  
                                                                                                    for(Variable aux: lista_variables){
                                                                                                        if(aux.nombre.equals(a)){
                                                                                                        RESULT = aux.valor;
                                                                                                        break;
                                                                                                        }
                                                                                                    } 
                                                                                                :}
                    ;

EXP                 ::= EXP:a or  EXP:b                 {:
                                                            boolean val1 = Boolean.parseBoolean(a);
                                                            boolean val2 = Boolean.parseBoolean(b);
                                                            boolean r = val1 || val2;
                                                            RESULT = Boolean.toString(r);
                                                        :}
                    |   EXP:a dot EXP:b                 {:
                                                            String concat = a + b;
                                                            RESULT = concat;
                                                        :}
                    |   EXP:a and EXP:b                 {:
                                                            boolean val1 = Boolean.parseBoolean(a);
                                                            boolean val2 = Boolean.parseBoolean(b);
                                                            boolean r = val1 && val2;
                                                            RESULT = Boolean.toString(r);
                                                        :}
                    |   not EXP:a                       {:
                                                            boolean val = Boolean.parseBoolean(a);
                                                            boolean r = !val;
                                                            RESULT = Boolean.toString(r);
                                                        :}
                    |   EXP:a mayor EXP:b               {:
                                                            String tipo1 = getTipo(a);
                                                            String tipo2 = getTipo(b);
                                                            if(tipo1.equals("Entero") && tipo2.equals("Entero")){
                                                                int num1 = Integer.valueOf(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 > num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Decimal")){
                                                                double num1 = Double.parseDouble(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 > num2; 
                                                                RESULT = Boolean.toString(r);  
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Entero")){
                                                                double num1 = Double.parseDouble(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 > num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Entero") && tipo2.equals("Decimal")){
                                                                int num1 = Integer.valueOf(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 > num2;
                                                                RESULT = Boolean.toString(r);
                                                            }
                                                        :}
                    |   EXP:a menor EXP:b               {:
                                                            String tipo1 = getTipo(a);
                                                            String tipo2 = getTipo(b);
                                                            if(tipo1.equals("Entero") && tipo2.equals("Entero")){
                                                                int num1 = Integer.valueOf(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 < num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Decimal")){
                                                                double num1 = Double.parseDouble(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 < num2; 
                                                                RESULT = Boolean.toString(r);  
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Entero")){
                                                                double num1 = Double.parseDouble(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 < num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Entero") && tipo2.equals("Decimal")){
                                                                int num1 = Integer.valueOf(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 < num2;
                                                                RESULT = Boolean.toString(r);
                                                            }
                                                        :}
                    |   EXP:a menorque EXP:b            {:
                                                            String tipo1 = getTipo(a);
                                                            String tipo2 = getTipo(b);
                                                            if(tipo1.equals("Entero") && tipo2.equals("Entero")){
                                                                int num1 = Integer.valueOf(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 <= num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Decimal")){
                                                                double num1 = Double.parseDouble(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 <= num2; 
                                                                RESULT = Boolean.toString(r);  
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Entero")){
                                                                double num1 = Double.parseDouble(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 <= num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Entero") && tipo2.equals("Decimal")){
                                                                int num1 = Integer.valueOf(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 <= num2;
                                                                RESULT = Boolean.toString(r);
                                                            }
                                                        :}
                    |   EXP:a mayorque EXP:b            {:
                                                            String tipo1 = getTipo(a);
                                                            String tipo2 = getTipo(b);
                                                            if(tipo1.equals("Entero") && tipo2.equals("Entero")){
                                                                int num1 = Integer.valueOf(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 >= num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Decimal")){
                                                                double num1 = Double.parseDouble(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 >= num2; 
                                                                RESULT = Boolean.toString(r);  
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Entero")){
                                                                double num1 = Double.parseDouble(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 >= num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Entero") && tipo2.equals("Decimal")){
                                                                int num1 = Integer.valueOf(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 >= num2;
                                                                RESULT = Boolean.toString(r);
                                                            }
                                                        :}
                    |   EXP:a diferente EXP:b           {:
                                                            String tipo1 = getTipo(a);
                                                            String tipo2 = getTipo(b);
                                                            if(tipo1.equals("Entero") && tipo2.equals("Entero")){
                                                                int num1 = Integer.valueOf(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 != num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Decimal")){
                                                                double num1 = Double.parseDouble(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 != num2; 
                                                                RESULT = Boolean.toString(r);  
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Entero")){
                                                                double num1 = Double.parseDouble(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 != num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Entero") && tipo2.equals("Decimal")){
                                                                int num1 = Integer.valueOf(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 != num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Booleano") && tipo2.equals("Booleano")){
                                                                boolean val1 = Boolean.parseBoolean(a);
                                                                boolean val2 = Boolean.parseBoolean(b);
                                                                boolean r = val1 != val2;
                                                                RESULT = Boolean.toString(r);
                                                            }
                                                        :}
                    |   EXP:a igualque EXP:b            {:
                                                            String tipo1 = getTipo(a);
                                                            String tipo2 = getTipo(b);
                                                            if(tipo1.equals("Entero") && tipo2.equals("Entero")){
                                                                int num1 = Integer.valueOf(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 == num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Decimal")){
                                                                double num1 = Double.parseDouble(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 == num2; 
                                                                RESULT = Boolean.toString(r);  
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Entero")){
                                                                double num1 = Double.parseDouble(a);
                                                                int num2 = Integer.valueOf(b);
                                                                boolean r = num1 == num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Entero") && tipo2.equals("Decimal")){
                                                                int num1 = Integer.valueOf(a);
                                                                double num2 = Double.parseDouble(b);
                                                                boolean r = num1 == num2;
                                                                RESULT = Boolean.toString(r);
                                                            }else if(tipo1.equals("Booleano") && tipo2.equals("Booleano")){
                                                                boolean val1 = Boolean.parseBoolean(a);
                                                                boolean val2 = Boolean.parseBoolean(b);
                                                                boolean r = val1 == val2;
                                                                RESULT = Boolean.toString(r);
                                                            }                                                        
                                                        :}
                    |   EXP:a plus EXP:b                {:
                                                            String tipo1 = getTipo(a);
                                                            String tipo2 = getTipo(b);
                                                            if(tipo1.equals("Entero") && tipo2.equals("Entero")){   //Tipo Entero
                                                                int num1 = Integer.valueOf(a);
                                                                int num2 = Integer.valueOf(b);
                                                                int sum = num1 + num2;
                                                                RESULT = String.valueOf(sum);
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Decimal")){   //Tipo Decimal
                                                                double num1 = Double.parseDouble(a);
                                                                double num2 = Double.parseDouble(b);
                                                                double sum = num1 + num2;
                                                                RESULT = String.valueOf(sum);
                                                            }else{  //Tipo entero (truncar valores)
                                                                int num1 = getValor(a);
                                                                int num2 = getValor(b);
                                                                int sum = num1 + num2;
                                                                RESULT = String.valueOf(sum);
                                                            }                         
                                                        :}
                    |   EXP:a hypen EXP:b               {:
                                                            String tipo1 = getTipo(a);
                                                            String tipo2 = getTipo(b);
                                                            if(tipo1.equals("Entero") && tipo2.equals("Entero")){   //Tipo Entero
                                                                int num1 = Integer.valueOf(a);
                                                                int num2 = Integer.valueOf(b);
                                                                int sum = num1 - num2;
                                                                RESULT = String.valueOf(sum);
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Decimal")){   //Tipo Decimal
                                                                double num1 = Double.parseDouble(a);
                                                                double num2 = Double.parseDouble(b);
                                                                double sum = num1 - num2;
                                                                RESULT = String.valueOf(sum);
                                                            }else{  //Tipo entero (truncar valores)
                                                                int num1 = getValor(a);
                                                                int num2 = getValor(b);
                                                                int sum = num1 - num2;
                                                                RESULT = String.valueOf(sum);
                                                            }             
                                                        :}
                    |   EXP:a div EXP:b                 {:
                                                            String tipo1 = getTipo(a);
                                                            String tipo2 = getTipo(b);
                                                            if(tipo1.equals("Entero") && tipo2.equals("Entero")){   //Tipo Entero
                                                                int num1 = Integer.valueOf(a);
                                                                int num2 = Integer.valueOf(b);
                                                                int sum = num1 / num2;
                                                                RESULT = String.valueOf(sum);
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Decimal")){   //Tipo Decimal
                                                                double num1 = Double.parseDouble(a);
                                                                double num2 = Double.parseDouble(b);
                                                                double sum = num1 / num2;
                                                                RESULT = String.valueOf(sum);
                                                            }else{  //Tipo entero (truncar valores)
                                                                int num1 = getValor(a);
                                                                int num2 = getValor(b);
                                                                int sum = num1 / num2;
                                                                RESULT = String.valueOf(sum);
                                                            }             
                                                        :}
                    |   EXP:a asterisk EXP:b            {:
                                                            String tipo1 = getTipo(a);
                                                            String tipo2 = getTipo(b);
                                                            if(tipo1.equals("Entero") && tipo2.equals("Entero")){   //Tipo Entero
                                                                int num1 = Integer.valueOf(a);
                                                                int num2 = Integer.valueOf(b);
                                                                int sum = num1 * num2;
                                                                RESULT = String.valueOf(sum);
                                                            }else if(tipo1.equals("Decimal") && tipo2.equals("Decimal")){   //Tipo Decimal
                                                                double num1 = Double.parseDouble(a);
                                                                double num2 = Double.parseDouble(b);
                                                                double sum = num1 * num2;
                                                                RESULT = String.valueOf(sum);
                                                            }else{  //Tipo entero (truncar valores)
                                                                int num1 = getValor(a);
                                                                int num2 = getValor(b);
                                                                int sum = num1 * num2;
                                                                RESULT = String.valueOf(sum);
                                                            }             
                                                        :}
                    |   hypen EXP:a                     {:
                                                            String tipo1 = getTipo(a);
                                                            if(tipo1.equals("Entero")){
                                                                int num1 = Integer.valueOf(a);
                                                                num1 = -1*num1;
                                                                RESULT = String.valueOf(num1);
                                                            }else if(tipo1.equals("Decimal")){
                                                                double num1 = Double.parseDouble(a);
                                                                double num = -1*num1;
                                                                RESULT = String.valueOf(num);
                                                            }
                                                        :}
                    |   opar EXP:a cpar                 {:
                                                            RESULT = a;
                                                        :}
                    |   VALOR:a                         {:
                                                            RESULT = a;
                                                        :}
                    ;

VALOR               ::= cadena:a                        {: RESULT = a; :}
                    |   numero:a                        {: RESULT = a; :}
                    |   true_:a                         {: RESULT = a; :}
                    |   false_:a                        {: RESULT = a; :}
                    |   dolar identificador:a           {: 
                                                            for(Variable aux: lista_variables){
                                                                if(aux.nombre.equals(a)){
                                                                    RESULT = aux.valor;
                                                                    break;
                                                                }
                                                            }
                                                        :}
                    ;